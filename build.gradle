/*
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

plugins {
    id 'org.jetbrains.intellij' version '1.11.0'
    id 'checkstyle'
    id 'pmd'
    id 'org.jetbrains.changelog' version '2.0.0'
}

repositories {
    mavenCentral()
}

group 'com.magento.idea'
version '5.1.0'

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'org.jetbrains.changelog'

def phpPluginVersion = System.getProperty("phpPluginVersion", "222.3739.45")
def ideaVersion = System.getProperty("ideaVersion", "2022.2.1")
def javaVersion = 11

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

intellij {
    version = ideaVersion
    type = 'IU'
    pluginName = 'com.magento.idea.magento2plugin'
    plugins = [
            "com.jetbrains.php:$phpPluginVersion",
            'yaml',
            'java-i18n',
            'properties',
            'CSS',
            'JavaScriptLanguage',
            'com.intellij.lang.jsgraphql:3.2.1',
            'platform-images',
            'copyright'
    ]
    updateSinceUntilBuild = false
    sameSinceUntilBuild = false
    downloadSources = !Boolean.valueOf(System.getenv('CI'))
    sandboxDir = "${project.rootDir}/.idea-sandbox"

    patchPluginXml {
        changeNotes = provider { changelog.getLatest().toHTML() }
    }
}

sourceSets {
    main {
        java.srcDirs 'src'
        resources.srcDir 'resources'
    }
    test {
        java.srcDir 'tests'
        resources.srcDir 'testData'
    }
}

publishPlugin {
    token = System.getenv("MAGENTO_PHPSTORM_intellijPublishToken")
    if (Boolean.valueOf(System.getenv("MAGENTO_PHPSTORM_isAlpha"))) {
        channels = ['alpha']
        version = version + "-alpha-" + getDate()
    }
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd-HH-mm')
    return formattedDate
}

apply from: "${project.rootDir}/gradle-tasks/staticChecks.gradle"

changelog {
    version = "${project.version}"
    path = "${project.projectDir}/CHANGELOG.md"
    header = provider { "[${project.version}] - ${getDate()}" }
    headerParserRegex = ~/(\d+\.)?(\d+\.)?(\*|\d+)/
    itemPrefix = "-"
    keepUnreleasedSection = true
    unreleasedTerm = "[Unreleased]"
    groups = ["Added", "Changed", "Deprecated", "Removed", "Fixed", "Security"]
}

idea {
    project {
        jdkName         = javaVersion
        languageLevel   = javaVersion
    }

    module {
        generatedSourceDirs += file('gen')
    }
}

dependencies {
    implementation(
            "org.junit.jupiter:junit-jupiter:5.8.2",
            "com.googlecode.json-simple:json-simple:1.1.1"
    )
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.9.0')
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.9.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.00")
}

test {
    useJUnitPlatform {
        includeEngines("junit-vintage")
    }
    dependsOn cleanTest
    testLogging.showStandardStreams = true
    testLogging {
        lifecycle {
            events "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
    maxHeapSize = '1G'
}
