<?php
#parse("PHP File Header.php")

namespace ${NAMESPACE};

#set($uses = ${USES})
#foreach ($use in $uses.split(","))
use $use;
#end

/**
 * Delete ${ENTITY_NAME} controller.
 */
class ${CLASS_NAME} extends ${EXTENDS} implements ${IMPLEMENTS_POST}, ${IMPLEMENTS_GET}
{
     /**
     * Authorization level of a basic admin session.
     *
     * @see _isAllowed()
     */
    public const ADMIN_RESOURCE = '${ADMIN_RESOURCE}';

    /**
     * @var ${DELETE_COMMAND}
     */
    private ${DELETE_COMMAND} $deleteByIdCommand;

    /**
     * @param Context $context
     * @param ${DELETE_COMMAND} $deleteByIdCommand
     */
    public function __construct(
        ${CONTEXT} $context,
        ${DELETE_COMMAND} $deleteByIdCommand
    ) {
        parent::__construct($context);
        $this->deleteByIdCommand = $deleteByIdCommand;
    }

    /**
     * Delete ${ENTITY_NAME} action.
     *
     * @return ${RESULT_INTERFACE}
     */
    public function execute()
    {
        /** @var ${RESULT_INTERFACE} $resultRedirect */
        $resultRedirect = $this->resultFactory->create(${RESULT_FACTORY}::TYPE_REDIRECT);
        $resultRedirect->setPath('*/*/');
        $entityId = (int) $this->getRequest()->getParam(${ENTITY_ID_REFERENCE});

        try {
            $this->deleteByIdCommand->execute($entityId);
            $this->messageManager->addSuccessMessage(__('You have successfully deleted ${ENTITY_NAME} entity'));
        } catch (${COULD_NOT_DELETE} | ${NO_SUCH_ENTITY_EXCEPTION} $exception) {
            $this->messageManager->addErrorMessage($exception->getMessage());
        }

        return $resultRedirect;
    }
}
