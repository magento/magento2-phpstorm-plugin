<?php
#parse("PHP File Header.php")

#if (${NAMESPACE})
    namespace ${NAMESPACE};
#end

#set ($uses = ${USES})
#foreach ($use in $uses.split(","))
    use $use;
#end
#if (${HASINTERFACE} == "true")
    #set ($hasInterface = true)
#else
    #set ($hasInterface = false)
#end

class ${NAME} #if (${EXTENDS})extends ${EXTENDS} #end #if (${IMPLEMENTS} && $hasInterface)implements ${IMPLEMENTS}#end
{
      #if (${PROPERTIES} && !$hasInterface)
            /**
             * String constants for property names.
             */
            #set ($properties = ${PROPERTIES})
        #foreach ($property in $properties.split(","))
            #set ($propertyData = $property.split(";"))
            #set ($propertyUpperSnake = $propertyData.get(0))
            #set ($propertyLowerSnake = $propertyData.get(1))
                public const $propertyUpperSnake = "$propertyLowerSnake";
            #end

    #end
    #if (${PROPERTIES})
        #set ($properties = ${PROPERTIES})
        #foreach ($property in $properties.split(","))
            #set ($propertyData = $property.split(";"))
            #set ($propertyUpperSnake = $propertyData.get(0))
            #set ($propertyType = $propertyData.get(2))
            #set ($propertyUpperCamel = $propertyData.get(3))
            #set ($propertyLowerCamel = $propertyData.get(4))
            #if(!($foreach.first))

            #end
            /**
             * Getter for $propertyUpperCamel.
             *
             * @return $propertyType|null
             */
            public function get$propertyUpperCamel(): ?$propertyType
            {
                #if($propertyType == 'string')
                return $this->getData(self::$propertyUpperSnake);
                #{else}
                return $this->getData(self::$propertyUpperSnake) === null ? null
                    : ($propertyType) $this->getData(self::$propertyUpperSnake);
                #end
            }

            /**
             * Setter for $propertyUpperCamel.
             *
             * @param $propertyType|null $$propertyLowerCamel
             *
             * @return void
             */
            public function set$propertyUpperCamel(?$propertyType $$propertyLowerCamel): void
            {
                $this->setData(self::$propertyUpperSnake, $$propertyLowerCamel);
            }
        #end
    #end
}
