<?php
#parse("PHP File Header.php")

namespace ${NAMESPACE};

#set($uses = ${USES})
#foreach ($use in $uses.split(","))
use $use;
#end

/**
 * Generic (form) button for ${ENTITY_NAME} entity.
 */
class ${CLASS_NAME}
{
    /**
     * @var ${CONTEXT}
     */
    private ${CONTEXT} $context;

    /**
     * @var ${URL}
     */
    private ${URL} $urlBuilder;

    /**
     * @param ${CONTEXT} $context
     */
    public function __construct(
        ${CONTEXT} $context
    ) {
        $this->context = $context;
        $this->urlBuilder = $context->getUrlBuilder();
    }

    /**
     * Get ${ENTITY_NAME} entity id.
     *
     * @return int
     */
    public function ${ENTITY_ID_GETTER}(): int
    {
        return (int) $this->context->getRequest()->getParam(${ENTITY_ID_REFERENCE});
    }

    /**
     * Wrap button specific options to settings array.
     *
     * @param string $label
     * @param string $class
     * @param string $onclick
     * @param array $dataAttribute
     * @param int $sortOrder
     *
     * @return array
     */
    protected function wrapButtonSettings(
        string $label,
        string $class,
        string $onclick = '',
        array $dataAttribute = [],
        int $sortOrder = 0
    ): array {
        return [
            'label' => $label,
            'on_click' => $onclick,
            'data_attribute' => $dataAttribute,
            'class' => $class,
            'sort_order' => $sortOrder
        ];
    }

    /**
     * Get url.
     *
     * @param string $route
     * @param array $params
     *
     * @return string
     */
    protected function getUrl(string $route, array $params = []): string
    {
        return $this->urlBuilder->getUrl($route, $params);
    }
}
